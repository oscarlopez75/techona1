swagger: "2.0"
info:
  version: "0.0.1"
  title: Server
# during dev, should point to your local machine
host: localhost:8080 #make sure you enter your IP or localhost
# basePath prefixes all resource paths
basePath: /
#
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /swagger:
    x-swagger-pipe: swagger_raw

  /login:
    #x-swagger-router-controller: login
    post:
      description: Returns username and token if user found
      operationId: login
      parameters:
        - name: userinfo
          required: true
          in: body
          description: The user
          schema:
            $ref: "#/definitions/UserBody"
      responses:
        "200":
          description: User name and token
          schema:
            $ref: "#/definitions/UserToken"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"

  /login/newuser:
    #x-swagger-router-controller: newuser
    post:
      description: Adds a new user if authorization passes
      operationId: newuser
      parameters:
        - name: userinfo
          required: true
          in: body
          description: Adds new user
          schema:
            $ref: "#/definitions/AddUserBody"
      responses:
        "200":
          description: User addition result
          schema:
            $ref: "#/definitions/UserAdd"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"



# complex objects have schema definitions
definitions:

  UserBody:
    type: object
    properties:
      username:
        type: string
        description: User name
      password:
        type: string
        description: User Password

  AddUserBody:
    type: object
    properties:
      username:
        type: string
        description: User name
      password:
        type: string
        description: User Password
      addusername:
        type: string
        description: User name
      addpassword:
        type: string
        description: User Password
      addrole:
        type: string
        description: User Role

  TokenBody:
    type: string
    properties:
      Authorization:
        type: string
        description: Token

  TokenCheck:
    type: object
    properties:
      message:
        type: object
        description: Result

  UserToken:
    type: object
    properties:
      username:
        type: string
        description: User name
      role:
        type: string
        description: User role
      jwt:
        type: string
        description: User Token

  UserAdd:
    type: object
    properties:
      message:
        type: string

  ErrorResponse:
    type: object
    properties:
      message:
        type: string
